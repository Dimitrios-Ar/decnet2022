
torch.Size([8, 3, 352, 608]) torch.Size([8, 1, 352, 608]) torch.Size([8, 1, 352, 608])
/home/robotlabx/anaconda3/envs/pytorchenv/lib/python3.7/site-packages/torchvision/transforms/functional.py:165: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /pytorch/torch/csrc/utils/tensor_numpy.cpp:180.)
  img = torch.as_tensor(np.asarray(pic))
Traceback (most recent call last):
  File "enet_sanity.py", line 309, in <module>
    depth = testing((torch.from_numpy(np.array(depth))),mean_d,std_d,batch_size,color_type=1)
  File "enet_sanity.py", line 166, in testing
    normalized_batch[i] = img_normalized
RuntimeError: The expanded size of the tensor (1) must match the existing size (352) at non-singleton dimension 0.  Target sizes: [1, 352, 608].  Tensor sizes: [352, 1, 608]